[Condition]
IsNear_self_<ALL>, IsOn_<GRABBABLE>_<SURFACES>, IsIn_<GRABBABLE>_<CONTAINERS>, IsOpen_<CAN_OPEN>, IsClose_<CAN_OPEN>,
IsSwitchedOn_<HAS_SWITCH>, IsSwitchedOff_<HAS_SWITCH>


[Action]
Walk_<ALL>, RightGrab_<GRABBABLE>, LeftGrab_<GRABBABLE>, RightPut_<GRABBABLE>_<SURFACES>, LeftPut_<GRABBABLE>_<SURFACES>,
RightPutIn_<GRABBABLE>_<CONTAINERS>, LeftPutIn_<GRABBABLE>_<CONTAINERS>, RightGrabFrom_<GRABBABLE>_<CONTAINERS>, LeftGrabFrom_<GRABBABLE>_<CONTAINERS>,
Open_<CAN_OPEN>, Close_<CAN_OPEN>, SwitchOn_<HAS_SWITCH>, SwitchOff_<HAS_SWITCH>


[Example]
[Task Information]
"id": "example-0",
"goal": [
  "IsOn(mug,nightstand)",
  "IsSwitchedOn(tablelamp)",
  "IsOpen(book)"
],
"init_state": [
  "IsSwitchedOff(tablelamp)",
  "IsClose(book)",
  "IsClose(nightstand)"
],
"objects": [
  "mug",
  "nightstand",
  "tablelamp",
  "book",
  "remotecontrol",
  "drawer"
],
"action_space": [
  [
    "Walk",
    "SwitchOn",
    "Open",
    "Close"
  ],
  [
    "Walk",
    "RightGrab",
    "RightPut",
    "SwitchOn",
    "RightPutIn"
  ],
  [
    "Walk",
    "RightGrab",
    "RightPut",
    "SwitchOn",
    "Open",
    "Close",
    "RightPutIn"
  ]
]

[OutPut]
"multi_robot_subtree_ls": [
  {
    "WalkToSwitchOntablelamp": [
      "Walk(self,tablelamp)",
      "SwitchOn(self,tablelamp)"
    ],
    "WalkToOpenBook": [
      "Walk(self,book)",
      "Open(self,book)"
    ],
    "WalkToOpenNightstand": [
      "Walk(self,nightstand)",
      "Open(self,nightstand)"
    ]
  },
  {
    "WalkToPutMugOnNightstand": [
      "Walk(self,mug)",
      "RightGrab(self,mug)",
      "Walk(self,nightstand)",
      "RightPut(self,mug,nightstand)"
    ],
    "WalkToSwitchOntablelamp": [
      "Walk(self,tablelamp)",
      "SwitchOn(self,tablelamp)"
    ],
    "WalkToPutRemoteInNightstand": [
      "Walk(self,remotecontrol)",
      "RightGrab(self,remotecontrol)",
      "Walk(self,nightstand)",
      "RightPutIn(self,remotecontrol,nightstand)"
    ],
  },
  {
    "WalkToPutMugOnNightstand": [
      "Walk(self,mug)",
      "RightGrab(self,mug)",
      "Walk(self,nightstand)",
      "RightPut(self,mug,nightstand)"
    ],
    "WalkToSwitchOntablelamp": [
      "Walk(self,tablelamp)",
      "SwitchOn(self,tablelamp)"
    ],
    "WalkToOpenBook": [
      "Walk(self,book)",
      "Open(self,book)"
    ],
    "WalkToPutRemoteInNightstand": [
      "Walk(self,remotecontrol)",
      "RightGrab(self,remotecontrol)",
      "Walk(self,nightstand)",
      "RightPutIn(self,remotecontrol,nightstand)"
    ],
    "WalkToOpenNightstand": [
      "Walk(self,nightstand)",
      "Open(self,nightstand)"
    ]
  }
]


[Task Information]
"id": "example-1",
"goal": [
    "IsOn(toy,bookshelf)",
    "IsIn(book,bookshelf)"
],
"init_state": [
],
"objects": [
    "toy",
    "book",
    "bookshelf"
],
"action_space": [
    [
        "Walk",
        "RightGrab",
        "RightPut"
    ],
    [
        "Walk",
        "RightGrab",
        "RightPutIn"
    ]
]

[OutPut]
"multi_robot_subtree_ls": [
    {
        "WalkToPutToyBookshelf": ["Walk(self,toy)","RightGrab(self,toy)","Walk(self,bookshelf)","RightPut(self,toy,bookshelf)"]
    },
    {
        "WalkToPutBookInBookshelf": ["Walk(self,book)","RightGrab(self,book)","Walk(self,bookshelf)","RightPutIn(self,book,bookshelf)"]
    }
]



[Task Information]
"id": "example-2",
"goal": [
  "IsOn(candybar,chair)",
  "IsOn(cellphone,tvstand)",
  "IsOn(salad,kitchentable)"
],
"init_state": [],
"objects": [
  "chair",
  "candybar",
  "cellphone",
  "salad",
  "tvstand",
  "kitchentable"
],
"action_space": [
  [
    "Walk",
    "RightGrab",
    "RightPut"
  ],
  [
    "Walk",
    "RightGrab",
    "RightPut"
  ],
  [
    "Walk",
    "RightGrab",
    "RightPut"
  ]
]

[OutPut]
"multi_robot_subtree_ls": [
  {
    "WalkToPutCandybarChair": [
      "Walk(self,candybar)",
      "RightGrab(self,candybar)",
      "Walk(self,chair)",
      "RightPut(self,candybar,chair)"
    ],
    "WalkToPutCellphoneTvstand": [
      "Walk(self,cellphone)",
      "RightGrab(self,cellphone)",
      "Walk(self,tvstand)",
      "RightPut(self,cellphone,tvstand)"
    ],
    "WalkToPutSaladKitchentable": [
      "Walk(self,salad)",
      "RightGrab(self,salad)",
      "Walk(self,kitchentable)",
      "RightPut(self,salad,kitchentable)"
    ]
  },
  {
    "WalkToPutCandybarChair": [
      "Walk(self,candybar)",
      "RightGrab(self,candybar)",
      "Walk(self,chair)",
      "RightPut(self,candybar,chair)"
    ],
    "WalkToPutCellphoneTvstand": [
      "Walk(self,cellphone)",
      "RightGrab(self,cellphone)",
      "Walk(self,tvstand)",
      "RightPut(self,cellphone,tvstand)"
    ],
    "WalkToPutSaladKitchentable": [
      "Walk(self,salad)",
      "RightGrab(self,salad)",
      "Walk(self,kitchentable)",
      "RightPut(self,salad,kitchentable)"
    ]
  },
  {
    "WalkToPutCandybarChair": [
      "Walk(self,candybar)",
      "RightGrab(self,candybar)",
      "Walk(self,chair)",
      "RightPut(self,candybar,chair)"
    ],
    "WalkToPutCellphoneTvstand": [
      "Walk(self,cellphone)",
      "RightGrab(self,cellphone)",
      "Walk(self,tvstand)",
      "RightPut(self,cellphone,tvstand)"
    ],
    "WalkToPutSaladKitchentable": [
      "Walk(self,salad)",
      "RightGrab(self,salad)",
      "Walk(self,kitchentable)",
      "RightPut(self,salad,kitchentable)"
    ]
  }
]


[Task Information]
"id": "example-3",
"goal": [
  "IsIn(chocolatesyrup,nightstand)",
  "IsIn(folder,nightstand)",
  "IsIn(cereal,bookshelf)",
  "IsSwitchedOn(coffeemaker)"
],
"init_state": [
  "IsClose(nightstand)",
  "IsClose(nightstand)",
  "IsClose(bookshelf)",
  "IsSwitchedOff(coffeemaker)"
],
"objects": [
  "chocolatesyrup",
  "nightstand",
  "folder",
  "cereal",
  "bookshelf",
  "coffeemaker",
  "bench",
  "toiletpaper",
  "apple"
],
"action_space": [
  [
    "Walk",
    "Open"
  ],
  [
    "Walk",
    "RightGrab",
    "RightPutIn"
  ],
  [
    "Walk",
    "RightGrab",
    "RightPutIn",
    "SwitchOn"
  ],
  [
    "Walk",
    "RightGrab",
    "RightPutIn",
    "SwitchOn"
  ]
]

[OutPut]
"multi_robot_subtree_ls": [
  {
    "WalkToOpenNightstand": [
      "Walk(self,nightstand)",
      "Open(self,nightstand)"
    ],
    "WalkToOpenBookshelf": [
      "Walk(self,bookshelf)",
      "Open(self,bookshelf)"
    ]
  },
  {
    "WalkToPutFolderInNightstand": [
      "Walk(self,folder)",
      "RightGrab(self,folder)",
      "Walk(self,nightstand)",
      "RightPutIn(self,folder,nightstand)"
    ],
    "WalkToPutChocolatesyrupInNightstand": [
      "Walk(self,chocolatesyrup)",
      "RightGrab(self,chocolatesyrup)",
      "Walk(self,nightstand)",
      "RightPutIn(self,chocolatesyrup,nightstand)"
    ],
    "WalkToPutCerealInBookshelf": [
      "Walk(self,cereal)",
      "RightGrab(self,cereal)",
      "Walk(self,bookshelf)",
      "RightPutIn(self,cereal,bookshelf)"
    ]
  },
  {
    "WalkToPutFolderInNightstand": [
      "Walk(self,folder)",
      "RightGrab(self,folder)",
      "Walk(self,nightstand)",
      "RightPutIn(self,folder,nightstand)"
    ],
    "WalkToPutChocolatesyrupInNightstand": [
      "Walk(self,chocolatesyrup)",
      "RightGrab(self,chocolatesyrup)",
      "Walk(self,nightstand)",
      "RightPutIn(self,chocolatesyrup,nightstand)"
    ],
    "WalkToPutCerealInBookshelf": [
      "Walk(self,cereal)",
      "RightGrab(self,cereal)",
      "Walk(self,bookshelf)",
      "RightPutIn(self,cereal,bookshelf)"
    ],
    "WalkToSwitchOnCoffeemaker": [
      "Walk(self,coffeemaker)",
      "SwitchOn(self,coffeemaker)"
    ]
  },
  {
    "WalkToPutFolderInNightstand": [
      "Walk(self,folder)",
      "RightGrab(self,folder)",
      "Walk(self,nightstand)",
      "RightPutIn(self,folder,nightstand)"
    ],
    "WalkToPutChocolatesyrupInNightstand": [
      "Walk(self,chocolatesyrup)",
      "RightGrab(self,chocolatesyrup)",
      "Walk(self,nightstand)",
      "RightPutIn(self,chocolatesyrup,nightstand)"
    ],
    "WalkToPutCerealInBookshelf": [
      "Walk(self,cereal)",
      "RightGrab(self,cereal)",
      "Walk(self,bookshelf)",
      "RightPutIn(self,cereal,bookshelf)"
    ],
    "WalkToSwitchOnCoffeemaker": [
      "Walk(self,coffeemaker)",
      "SwitchOn(self,coffeemaker)"
    ]
  }
]



